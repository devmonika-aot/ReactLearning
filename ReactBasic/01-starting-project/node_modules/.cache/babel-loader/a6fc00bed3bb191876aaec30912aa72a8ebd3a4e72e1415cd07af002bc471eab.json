{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\01-starting-project\\\\src\\\\Components\\\\Users\\\\AddUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../UI/Button';\nimport Card from '../UI/Card';\nimport classes from './AddUser.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddUser() {\n  _s();\n  const [newuser, setUserName] = useState('');\n  const [userAge, setAge] = useState('');\n  const userNameHandler = event => {\n    console.log(event.target.value);\n    setUserName(event.target.value);\n  };\n  const ageHandler = event => {\n    console.log(event.target.value);\n    setAge(event.target.value);\n  };\n  const submitUserHandler = event => {\n    // console.log(event.target.value) doesn't work because we use submit handler not to get text from input\n    // Submit handler can be use to send the data to parent node, clear the input box etc\n    event.preventDefault();\n    if (newuser.trim.length === 0 || userAge.trim.length === 0) {\n      return;\n    }\n    setUserName('');\n    setAge('');\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        onChange: userNameHandler,\n        value: newuser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"age\",\n        onChange: ageHandler,\n        value: userAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AddUser, \"oWImSyTQHEfPgCEo1IgyTU9nBSA=\");\n_c = AddUser;\nexport default AddUser;\n//<label for=\"username\">Username</label>\n//<input type=\"text\" id=\"username\" name=\"username\" />\n// Now when the user clicks with the mouse on the username text the browser will automatically put the focus in the corresponding input field\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Button","Card","classes","jsxDEV","_jsxDEV","AddUser","_s","newuser","setUserName","userAge","setAge","userNameHandler","event","console","log","target","value","ageHandler","submitUserHandler","preventDefault","trim","length","className","input","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/01-starting-project/src/Components/Users/AddUser.js"],"sourcesContent":["\r\nimport React,{useState} from 'react';\r\nimport Button from '../UI/Button';\r\nimport Card from '../UI/Card';\r\nimport classes from './AddUser.module.css';\r\n\r\nfunction AddUser(){\r\n\r\n    const[newuser,setUserName] = useState('');\r\n    const[userAge,setAge] = useState('');\r\n\r\n    const userNameHandler=(event) => {\r\n        console.log(event.target.value);\r\n        setUserName(event.target.value)\r\n    }\r\n    const ageHandler= (event) =>{\r\n        console.log(event.target.value)\r\n        setAge(event.target.value)\r\n    }\r\n    const submitUserHandler= (event) => {\r\n        // console.log(event.target.value) doesn't work because we use submit handler not to get text from input\r\n        // Submit handler can be use to send the data to parent node, clear the input box etc\r\n        event.preventDefault();\r\n       if(newuser.trim.length ===0 || userAge.trim.length===0){\r\n        return \r\n       }\r\n\r\n       setUserName('')\r\n       setAge('')\r\n    }\r\n    return(\r\n    <Card className={classes.input}>\r\n        <form onSubmit={submitUserHandler}>\r\n            <label htmlFor='username'>username</label>\r\n            <input type='text' id='username' onChange={userNameHandler} value={newuser}/>\r\n            <label htmlFor='age'>age</label>\r\n            <input type='number' id='age' onChange={ageHandler} value={userAge} />\r\n            <Button type='submit' >Add User</Button>\r\n        </form>\r\n    </Card>)\r\n}\r\n\r\nexport default AddUser;\r\n//<label for=\"username\">Username</label>\r\n//<input type=\"text\" id=\"username\" name=\"username\" />\r\n// Now when the user clicks with the mouse on the username text the browser will automatically put the focus in the corresponding input field"],"mappings":";;AACA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EAEd,MAAK,CAACC,OAAO,EAACC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK,CAACU,OAAO,EAACC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,eAAe,GAAEC,KAAK,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC/BR,WAAW,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EACD,MAAMC,UAAU,GAAGL,KAAK,IAAI;IACxBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC/BN,MAAM,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAME,iBAAiB,GAAGN,KAAK,IAAK;IAChC;IACA;IACAA,KAAK,CAACO,cAAc,EAAE;IACvB,IAAGZ,OAAO,CAACa,IAAI,CAACC,MAAM,KAAI,CAAC,IAAIZ,OAAO,CAACW,IAAI,CAACC,MAAM,KAAG,CAAC,EAAC;MACtD;IACD;IAEAb,WAAW,CAAC,EAAE,CAAC;IACfE,MAAM,CAAC,EAAE,CAAC;EACb,CAAC;EACD,oBACAN,OAAA,CAACH,IAAI;IAACqB,SAAS,EAAEpB,OAAO,CAACqB,KAAM;IAAAC,QAAA,eAC3BpB,OAAA;MAAMqB,QAAQ,EAAEP,iBAAkB;MAAAM,QAAA,gBAC9BpB,OAAA;QAAOsB,OAAO,EAAC,UAAU;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC1C1B,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,UAAU;QAACC,QAAQ,EAAEtB,eAAgB;QAACK,KAAK,EAAET;MAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC7E1B,OAAA;QAAOsB,OAAO,EAAC,KAAK;QAAAF,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAChC1B,OAAA;QAAO2B,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC,KAAK;QAACC,QAAQ,EAAEhB,UAAW;QAACD,KAAK,EAAEP;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtE1B,OAAA,CAACJ,MAAM;QAAC+B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAE;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AACX;AAACxB,EAAA,CAlCQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAoChB,eAAeA,OAAO;AACtB;AACA;AACA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}